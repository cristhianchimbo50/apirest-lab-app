// <auto-generated />
using System;
using ApiRest_LabWebApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiRest_LabWebApp.Migrations
{
    [DbContext(typeof(BdLabContext))]
    [Migration("20250624081700_agregar_id_orden_a_detalle_convenio")]
    partial class agregar_id_orden_a_detalle_convenio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Convenio", b =>
                {
                    b.Property<int>("IdConvenio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_convenio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdConvenio"));

                    b.Property<bool?>("Anulado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("anulado");

                    b.Property<DateOnly>("FechaConvenio")
                        .HasColumnType("date")
                        .HasColumnName("fecha_convenio");

                    b.Property<int?>("IdMedico")
                        .HasColumnType("int")
                        .HasColumnName("id_medico");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monto_total");

                    b.Property<decimal>("PorcentajeComision")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("porcentaje_comision");

                    b.HasKey("IdConvenio")
                        .HasName("PK__convenio__177BD43EA106A132");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdUsuario");

                    b.ToTable("convenio", (string)null);
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.DetalleConvenio", b =>
                {
                    b.Property<int>("IdDetalleConvenio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle_convenio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleConvenio"));

                    b.Property<int?>("IdConvenio")
                        .HasColumnType("int")
                        .HasColumnName("id_convenio");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int")
                        .HasColumnName("id_orden");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("subtotal");

                    b.HasKey("IdDetalleConvenio")
                        .HasName("PK__detalle___8AD8083EE71E99F4");

                    b.HasIndex("IdConvenio");

                    b.HasIndex("IdOrden");

                    b.ToTable("detalle_convenio", (string)null);
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.DetalleOrden", b =>
                {
                    b.Property<int>("IdDetalleOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle_orden");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleOrden"));

                    b.Property<int?>("IdExamen")
                        .HasColumnType("int")
                        .HasColumnName("id_examen");

                    b.Property<int?>("IdOrden")
                        .HasColumnType("int")
                        .HasColumnName("id_orden");

                    b.Property<int?>("IdResultado")
                        .HasColumnType("int")
                        .HasColumnName("id_resultado");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.HasKey("IdDetalleOrden")
                        .HasName("PK__detalle___D2FC3FD781609604");

                    b.HasIndex("IdExamen");

                    b.HasIndex("IdOrden");

                    b.HasIndex("IdResultado");

                    b.ToTable("detalle_orden", (string)null);
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.DetallePago", b =>
                {
                    b.Property<int>("IdDetallePago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle_pago");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetallePago"));

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_anulacion");

                    b.Property<int?>("IdPago")
                        .HasColumnType("int")
                        .HasColumnName("id_pago");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monto");

                    b.Property<string>("TipoPago")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tipo_pago");

                    b.HasKey("IdDetallePago")
                        .HasName("PK__detalle___55C3EFACDE063256");

                    b.HasIndex("IdPago");

                    b.HasIndex("IdUsuario");

                    b.ToTable("detalle_pago", (string)null);
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.DetalleResultado", b =>
                {
                    b.Property<int>("IdDetalleResultado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle_resultado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleResultado"));

                    b.Property<bool?>("Anulado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("anulado");

                    b.Property<int?>("IdExamen")
                        .HasColumnType("int")
                        .HasColumnName("id_examen");

                    b.Property<int?>("IdResultado")
                        .HasColumnType("int")
                        .HasColumnName("id_resultado");

                    b.Property<string>("Observacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("observacion");

                    b.Property<string>("Unidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("unidad");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valor");

                    b.HasKey("IdDetalleResultado")
                        .HasName("PK__detalle___E4307FE10B18D938");

                    b.HasIndex("IdResultado");

                    b.HasIndex(new[] { "IdExamen" }, "idx_detalle_resultado_examen");

                    b.ToTable("detalle_resultado", (string)null);
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Examen", b =>
                {
                    b.Property<int>("IdExamen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_examen");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdExamen"));

                    b.Property<bool?>("Anulado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("anulado");

                    b.Property<string>("Estudio")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("estudio");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("NombreExamen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre_examen");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.Property<string>("Tecnica")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tecnica");

                    b.Property<string>("TiempoEntrega")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tiempo_entrega");

                    b.Property<string>("TipoExamen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tipo_examen");

                    b.Property<string>("TipoMuestra")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tipo_muestra");

                    b.Property<string>("TituloExamen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titulo_examen");

                    b.Property<string>("Unidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("unidad");

                    b.Property<string>("ValorReferencia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("valor_referencia");

                    b.HasKey("IdExamen")
                        .HasName("PK__examen__D16A231D8ED13AFD");

                    b.HasIndex("IdUsuario");

                    b.ToTable("examen", (string)null);
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.ExamenComposicion", b =>
                {
                    b.Property<int>("IdExamenPadre")
                        .HasColumnType("int")
                        .HasColumnName("id_examen_padre");

                    b.Property<int>("IdExamenHijo")
                        .HasColumnType("int")
                        .HasColumnName("id_examen_hijo");

                    b.HasKey("IdExamenPadre", "IdExamenHijo")
                        .HasName("PK_examen_composicion");

                    b.HasIndex("IdExamenHijo");

                    b.ToTable("examen_composicion", (string)null);
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.ExamenReactivo", b =>
                {
                    b.Property<int>("IdExamenReactivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_examen_reactivo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdExamenReactivo"));

                    b.Property<decimal?>("CantidadUsada")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("cantidad_usada");

                    b.Property<int?>("IdExamen")
                        .HasColumnType("int")
                        .HasColumnName("id_examen");

                    b.Property<int?>("IdReactivo")
                        .HasColumnType("int")
                        .HasColumnName("id_reactivo");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Unidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("unidad");

                    b.HasKey("IdExamenReactivo")
                        .HasName("PK__examen_r__ECE10F430B823FC7");

                    b.HasIndex("IdExamen");

                    b.HasIndex("IdReactivo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("examen_reactivo", (string)null);
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Medico", b =>
                {
                    b.Property<int>("IdMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_medico");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMedico"));

                    b.Property<bool>("Anulado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("anulado");

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("correo");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("especialidad");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("NombreMedico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre_medico");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono");

                    b.HasKey("IdMedico")
                        .HasName("PK__medico__E038EB43167721F0");

                    b.HasIndex("IdUsuario");

                    b.HasIndex(new[] { "Correo" }, "UQ__medico__2A586E0B86B58ECE")
                        .IsUnique()
                        .HasFilter("[correo] IS NOT NULL");

                    b.ToTable("medico", (string)null);
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.MovimientoReactivo", b =>
                {
                    b.Property<int>("IdMovimientoReactivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_movimiento_reactivo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovimientoReactivo"));

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("cantidad");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_movimiento");

                    b.Property<int?>("IdOrden")
                        .HasColumnType("int")
                        .HasColumnName("id_orden");

                    b.Property<int?>("IdReactivo")
                        .HasColumnType("int")
                        .HasColumnName("id_reactivo");

                    b.Property<string>("Observacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("observacion");

                    b.Property<string>("TipoMovimiento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tipo_movimiento");

                    b.HasKey("IdMovimientoReactivo")
                        .HasName("PK__movimien__6CA263B2FDAE2E0C");

                    b.HasIndex("IdOrden");

                    b.HasIndex("IdReactivo");

                    b.ToTable("movimiento_reactivo", (string)null);
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Orden", b =>
                {
                    b.Property<int>("IdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_orden");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrden"));

                    b.Property<bool?>("Anulado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("anulado");

                    b.Property<string>("EstadoPago")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado_pago");

                    b.Property<DateOnly>("FechaOrden")
                        .HasColumnType("date")
                        .HasColumnName("fecha_orden");

                    b.Property<int?>("IdMedico")
                        .HasColumnType("int")
                        .HasColumnName("id_medico");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("id_paciente");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<bool?>("LiquidadoConvenio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("liquidado_convenio");

                    b.Property<string>("NumeroOrden")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numero_orden");

                    b.Property<string>("Observacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("observacion");

                    b.Property<decimal?>("SaldoPendiente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("saldo_pendiente");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.Property<decimal?>("TotalPagado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("total_pagado");

                    b.HasKey("IdOrden")
                        .HasName("PK__orden__DD5B8F3315A23942");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdUsuario");

                    b.HasIndex(new[] { "NumeroOrden" }, "UQ__orden__3706711555B8ACCE")
                        .IsUnique();

                    b.HasIndex(new[] { "EstadoPago" }, "idx_orden_estado_pago");

                    b.ToTable("orden", (string)null);
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Paciente", b =>
                {
                    b.Property<int>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_paciente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaciente"));

                    b.Property<bool?>("Anulado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("anulado");

                    b.Property<string>("CedulaPaciente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cedula_paciente");

                    b.Property<string>("CorreoElectronicoPaciente")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("correo_electronico_paciente");

                    b.Property<string>("DireccionPaciente")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("direccion_paciente");

                    b.Property<int?>("EdadPaciente")
                        .HasColumnType("int")
                        .HasColumnName("edad_paciente");

                    b.Property<DateOnly>("FechaNacPaciente")
                        .HasColumnType("date")
                        .HasColumnName("fecha_nac_paciente");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("NombrePaciente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre_paciente");

                    b.Property<string>("TelefonoPaciente")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono_paciente");

                    b.HasKey("IdPaciente")
                        .HasName("PK__paciente__2C2C72BB0EBF26E8");

                    b.HasIndex("IdUsuario");

                    b.HasIndex(new[] { "CedulaPaciente" }, "UQ__paciente__4DE187B18A0DA1EB")
                        .IsUnique();

                    b.HasIndex(new[] { "NombrePaciente" }, "idx_paciente_nombre");

                    b.ToTable("paciente", (string)null);
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Pago", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pago");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPago"));

                    b.Property<bool?>("Anulado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("anulado");

                    b.Property<DateTime?>("FechaPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_pago")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdOrden")
                        .HasColumnType("int")
                        .HasColumnName("id_orden");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<decimal?>("MontoPagado")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monto_pagado");

                    b.Property<string>("Observacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("observacion");

                    b.HasKey("IdPago")
                        .HasName("PK__pago__0941B074D5DF9BAD");

                    b.HasIndex("IdOrden");

                    b.HasIndex("IdUsuario");

                    b.HasIndex(new[] { "FechaPago" }, "idx_pago_fecha");

                    b.ToTable("pago", (string)null);
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Reactivo", b =>
                {
                    b.Property<int>("IdReactivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_reactivo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReactivo"));

                    b.Property<bool?>("Anulado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("anulado");

                    b.Property<decimal?>("CantidadDisponible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("cantidad_disponible");

                    b.Property<string>("Fabricante")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fabricante");

                    b.Property<string>("NombreReactivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre_reactivo");

                    b.Property<string>("Unidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("unidad");

                    b.HasKey("IdReactivo")
                        .HasName("PK__reactivo__EC691887291B11E4");

                    b.ToTable("reactivo", (string)null);
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Resultado", b =>
                {
                    b.Property<int>("IdResultado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_resultado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdResultado"));

                    b.Property<bool?>("Anulado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("anulado");

                    b.Property<DateTime>("FechaResultado")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_resultado");

                    b.Property<int?>("IdMedico")
                        .HasColumnType("int")
                        .HasColumnName("id_medico");

                    b.Property<int?>("IdOrden")
                        .HasColumnType("int")
                        .HasColumnName("id_orden");

                    b.Property<int?>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("id_paciente");

                    b.Property<string>("NumeroResultado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numero_resultado");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("observaciones");

                    b.HasKey("IdResultado")
                        .HasName("PK__resultad__33A42B30A58D4867");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdOrden");

                    b.HasIndex("IdPaciente");

                    b.ToTable("resultado", (string)null);
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("ClaveUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("clave_usuario");

                    b.Property<string>("CorreoUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("correo_usuario");

                    b.Property<bool?>("EsContraseñaTemporal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("es_contraseña_temporal");

                    b.Property<bool?>("EstadoRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("estado_registro");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("rol");

                    b.HasKey("IdUsuario")
                        .HasName("PK__usuario__4E3E04AD8F3B8033");

                    b.HasIndex(new[] { "CorreoUsuario" }, "UQ__usuario__CD54AB1C29B4F762")
                        .IsUnique();

                    b.HasIndex(new[] { "CorreoUsuario" }, "idx_usuario_correo");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("ExamenExamen", b =>
                {
                    b.Property<int>("IdExamenHijosIdExamen")
                        .HasColumnType("int");

                    b.Property<int>("IdExamenPadresIdExamen")
                        .HasColumnType("int");

                    b.HasKey("IdExamenHijosIdExamen", "IdExamenPadresIdExamen");

                    b.HasIndex("IdExamenPadresIdExamen");

                    b.ToTable("ExamenExamen");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Convenio", b =>
                {
                    b.HasOne("ApiRest_LabWebApp.Models.Medico", "IdMedicoNavigation")
                        .WithMany("Convenios")
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__convenio__id_med__52593CB8");

                    b.HasOne("ApiRest_LabWebApp.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Convenios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__convenio__id_usu__5441852A");

                    b.Navigation("IdMedicoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.DetalleConvenio", b =>
                {
                    b.HasOne("ApiRest_LabWebApp.Models.Convenio", "IdConvenioNavigation")
                        .WithMany("DetalleConvenios")
                        .HasForeignKey("IdConvenio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__detalle_c__id_co__5EBF139D");

                    b.HasOne("ApiRest_LabWebApp.Models.Orden", "Orden")
                        .WithMany("DetalleConvenios")
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_detalle_convenio_orden");

                    b.Navigation("IdConvenioNavigation");

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.DetalleOrden", b =>
                {
                    b.HasOne("ApiRest_LabWebApp.Models.Examen", "IdExamenNavigation")
                        .WithMany("DetalleOrdens")
                        .HasForeignKey("IdExamen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__detalle_o__id_ex__0D7A0286");

                    b.HasOne("ApiRest_LabWebApp.Models.Orden", "IdOrdenNavigation")
                        .WithMany("DetalleOrdens")
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__detalle_o__id_or__0C85DE4D");

                    b.HasOne("ApiRest_LabWebApp.Models.Resultado", "IdResultadoNavigation")
                        .WithMany("DetalleOrdens")
                        .HasForeignKey("IdResultado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__detalle_o__id_re__0E6E26BF");

                    b.Navigation("IdExamenNavigation");

                    b.Navigation("IdOrdenNavigation");

                    b.Navigation("IdResultadoNavigation");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.DetallePago", b =>
                {
                    b.HasOne("ApiRest_LabWebApp.Models.Pago", "IdPagoNavigation")
                        .WithMany("DetallePagos")
                        .HasForeignKey("IdPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__detalle_p__id_pa__00200768");

                    b.HasOne("ApiRest_LabWebApp.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("DetallePagos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__detalle_p__id_us__01142BA1");

                    b.Navigation("IdPagoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.DetalleResultado", b =>
                {
                    b.HasOne("ApiRest_LabWebApp.Models.Examen", "IdExamenNavigation")
                        .WithMany("DetalleResultados")
                        .HasForeignKey("IdExamen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__detalle_r__id_ex__1CBC4616");

                    b.HasOne("ApiRest_LabWebApp.Models.Resultado", "IdResultadoNavigation")
                        .WithMany("DetalleResultados")
                        .HasForeignKey("IdResultado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__detalle_r__id_re__1BC821DD");

                    b.Navigation("IdExamenNavigation");

                    b.Navigation("IdResultadoNavigation");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Examen", b =>
                {
                    b.HasOne("ApiRest_LabWebApp.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Examen")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__examen__id_usuar__5812160E");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.ExamenComposicion", b =>
                {
                    b.HasOne("ApiRest_LabWebApp.Models.Examen", "ExamenHijo")
                        .WithMany()
                        .HasForeignKey("IdExamenHijo")
                        .IsRequired()
                        .HasConstraintName("FK_examen_composicion_hijo");

                    b.HasOne("ApiRest_LabWebApp.Models.Examen", "ExamenPadre")
                        .WithMany()
                        .HasForeignKey("IdExamenPadre")
                        .IsRequired()
                        .HasConstraintName("FK_examen_composicion_padre");

                    b.Navigation("ExamenHijo");

                    b.Navigation("ExamenPadre");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.ExamenReactivo", b =>
                {
                    b.HasOne("ApiRest_LabWebApp.Models.Examen", "IdExamenNavigation")
                        .WithMany("ExamenReactivos")
                        .HasForeignKey("IdExamen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__examen_re__id_ex__07C12930");

                    b.HasOne("ApiRest_LabWebApp.Models.Reactivo", "IdReactivoNavigation")
                        .WithMany("ExamenReactivos")
                        .HasForeignKey("IdReactivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__examen_re__id_re__08B54D69");

                    b.HasOne("ApiRest_LabWebApp.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("ExamenReactivos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__examen_re__id_us__09A971A2");

                    b.Navigation("IdExamenNavigation");

                    b.Navigation("IdReactivoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Medico", b =>
                {
                    b.HasOne("ApiRest_LabWebApp.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Medicos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__medico__id_usuar__3F466844");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.MovimientoReactivo", b =>
                {
                    b.HasOne("ApiRest_LabWebApp.Models.Orden", "IdOrdenNavigation")
                        .WithMany("MovimientoReactivos")
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__movimient__id_or__04E4BC85");

                    b.HasOne("ApiRest_LabWebApp.Models.Reactivo", "IdReactivoNavigation")
                        .WithMany("MovimientoReactivos")
                        .HasForeignKey("IdReactivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__movimient__id_re__03F0984C");

                    b.Navigation("IdOrdenNavigation");

                    b.Navigation("IdReactivoNavigation");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Orden", b =>
                {
                    b.HasOne("ApiRest_LabWebApp.Models.Medico", "IdMedicoNavigation")
                        .WithMany("Ordens")
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__orden__id_medico__4E88ABD4");

                    b.HasOne("ApiRest_LabWebApp.Models.Paciente", "IdPacienteNavigation")
                        .WithMany("Ordens")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__orden__id_pacien__48CFD27E");

                    b.HasOne("ApiRest_LabWebApp.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Ordens")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__orden__id_usuari__4F7CD00D");

                    b.Navigation("IdMedicoNavigation");

                    b.Navigation("IdPacienteNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Paciente", b =>
                {
                    b.HasOne("ApiRest_LabWebApp.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Pacientes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__paciente__id_usu__44FF419A");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Pago", b =>
                {
                    b.HasOne("ApiRest_LabWebApp.Models.Orden", "IdOrdenNavigation")
                        .WithMany("Pagos")
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__pago__id_orden__619B8048");

                    b.HasOne("ApiRest_LabWebApp.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Pagos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__pago__id_usuario__6477ECF3");

                    b.Navigation("IdOrdenNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Resultado", b =>
                {
                    b.HasOne("ApiRest_LabWebApp.Models.Medico", "IdMedicoNavigation")
                        .WithMany("Resultados")
                        .HasForeignKey("IdMedico")
                        .HasConstraintName("FK__resultado__id_me__7B5B524B");

                    b.HasOne("ApiRest_LabWebApp.Models.Orden", "IdOrdenNavigation")
                        .WithMany("Resultados")
                        .HasForeignKey("IdOrden")
                        .HasConstraintName("FK__resultado__id_or__7C4F7684");

                    b.HasOne("ApiRest_LabWebApp.Models.Paciente", "IdPacienteNavigation")
                        .WithMany("Resultados")
                        .HasForeignKey("IdPaciente")
                        .HasConstraintName("FK__resultado__id_pa__7A672E12");

                    b.Navigation("IdMedicoNavigation");

                    b.Navigation("IdOrdenNavigation");

                    b.Navigation("IdPacienteNavigation");
                });

            modelBuilder.Entity("ExamenExamen", b =>
                {
                    b.HasOne("ApiRest_LabWebApp.Models.Examen", null)
                        .WithMany()
                        .HasForeignKey("IdExamenHijosIdExamen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiRest_LabWebApp.Models.Examen", null)
                        .WithMany()
                        .HasForeignKey("IdExamenPadresIdExamen")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Convenio", b =>
                {
                    b.Navigation("DetalleConvenios");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Examen", b =>
                {
                    b.Navigation("DetalleOrdens");

                    b.Navigation("DetalleResultados");

                    b.Navigation("ExamenReactivos");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Medico", b =>
                {
                    b.Navigation("Convenios");

                    b.Navigation("Ordens");

                    b.Navigation("Resultados");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Orden", b =>
                {
                    b.Navigation("DetalleConvenios");

                    b.Navigation("DetalleOrdens");

                    b.Navigation("MovimientoReactivos");

                    b.Navigation("Pagos");

                    b.Navigation("Resultados");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Paciente", b =>
                {
                    b.Navigation("Ordens");

                    b.Navigation("Resultados");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Pago", b =>
                {
                    b.Navigation("DetallePagos");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Reactivo", b =>
                {
                    b.Navigation("ExamenReactivos");

                    b.Navigation("MovimientoReactivos");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Resultado", b =>
                {
                    b.Navigation("DetalleOrdens");

                    b.Navigation("DetalleResultados");
                });

            modelBuilder.Entity("ApiRest_LabWebApp.Models.Usuario", b =>
                {
                    b.Navigation("Convenios");

                    b.Navigation("DetallePagos");

                    b.Navigation("Examen");

                    b.Navigation("ExamenReactivos");

                    b.Navigation("Medicos");

                    b.Navigation("Ordens");

                    b.Navigation("Pacientes");

                    b.Navigation("Pagos");
                });
#pragma warning restore 612, 618
        }
    }
}
